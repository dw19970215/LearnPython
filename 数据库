--01 mysql 数据库的操作

    -- 链接数据库
	mysql -uroot -pmysql
    
	-- 不显示密码
    mysql -uroot -p
    输入密码
	
    -- 退出数据库
    --quit/exit/ctrl + d
    exit
    

    -- sql语句最后需要有分号;结尾
    -- 显示数据库版本 version
    select version();
    

    -- 显示时间 now
    select now();
	
    
	-- 查看当前使用的数据库
    select database();
    

    -- 查看所有数据库
	show databases;

    -- 创建数据库
    -- create database 数据库名 charset=utf8;
    create database python8 charset=utf8;
	

    -- 查看创建数据库的语句
    -- show create database 数据库名
    show create database python8;

   
     

    -- 使用数据库
    -- use 数据库的名字
    use python8;
    

    -- 删除数据库
    -- drop database 数据库名;
    drop database python8;
   


--02 数据表的操作

    -- 查看当前数据库中所有表
   show tables;
   -- show databases;
    

    -- 创建表
	-- int unsigned 无符号整形
    -- auto_increment 表示自动增长
    -- not null 表示不能为空
    -- primary key 表示主键
    -- default 默认值
    -- create table 数据表名字 (字段 类型 约束[, 字段 类型 约束]);
    create table students(name varchar(30), age int unsigned );

	

    -- 查看表结构
    -- desc 数据表的名字;
    desc students;
	
   
    -- 创建 classes 表(id、name)
    create table classes (id int unsigned primary key auto_increment,name varchar(30));
        create table classes (id int unsigned primary key auto_increment,name varchar(30));

    
	
	
    -- 创建 students 表(id、name、age、high (decimal)、
    --gender (enum)、cls_id)

    create table students(id int unsigned primary key auto_increment,name varchar(30) not null,age int unsigned,high decimal(5,2),gender enum("男","女","妖","保密") default "保密",cls_id int unsigned);


   
  
	

    -- 查看表的创建语句
    -- show create table 表名字;
    show create table students;
    -- show create database xxx;
    


    -- 修改表-添加字段 mascot (吉祥物)
    -- alter table 表名 add 列名 类型;
    alter table classes add mascot varchar(30);  
   

    -- 修改表-修改字段：不重命名版
    -- alter table 表名 modify 列名 类型及约束;
   alter table classes modify mascot varchar(255); 这个不要记
	


    -- 修改表-修改字段：重命名版
    -- alter table 表名 change 原名 新名 类型及约束;
    alter table classes change mascot jxw int ;
	alter table classes change mascot mascot int ;



    -- 修改表-删除字段
    -- alter table 表名 drop 列名;

    alter table classes drop jxw; 
	


    -- 删除表
    -- drop table 表名;
    -- drop database 数据库;
    drop table students;
    drop database python8;
   
   

    
--03 增删改查(curd)

    -- 增加
+-------+------------------+------+-----+---------+----------------+
| Field | Type             | Null | Key | Default | Extra          |
+-------+------------------+------+-----+---------+----------------+
| id    | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
| name  | varchar(20)      | NO   |     | NULL    |                |
+-------+------------------+------+-----+---------+----------------+
        -- 全列插入
        -- insert [into] 表名 values(...)
        -- 主键字段 可以用 0  null   default 来占位
        -- 向classes表中插入 一个班级

        insert into classes(name) values("oldyang");
            insert into classes(id,name) values(18,"oldyang")
               insert into classes(id,name) values(default,"oldyang") 
		 insert into classes values(18,"oldyang");


        insert into 表名 (字段...) values(值...) #请一一对应


        -- 向students表插入 一个学生信息
+--------+-------------------------------------+------+-----+---------+----------------+
| Field  | Type                                | Null | Key | Default | Extra          |
+--------+-------------------------------------+------+-----+---------+----------------+
| id     | int(10) unsigned                    | NO   | PRI | NULL    | auto_increment |
| name   | varchar(20)                         | NO   |     | NULL    |                |
| age    | int(10) unsigned                    | YES  |     | NULL    |                |
| high   | decimal(5,2)                        | YES  |     | NULL    |                |
| gender | enum('男','女','中性','保密')       | YES  |     | 保密    |                |
| cls_id | int(11)                             | YES  |     | NULL    |                |
+--------+-------------------------------------+------+-----+---------+----------------+
		-- 全部插入
        
        -- 部分插入
        -- insert into 表名(列1,...) values(值1,...)
       insert into students(name) values("xiaohui");

        -- 多行插入
        insert into students(name) values ("xiaohui1"),("xiaohui2");
		


    -- 修改
    -- update 表名 set 列1=值1,列2=值2... where 条件;
        -- 全部修改
        update students set age = 18;  想三秒;
		
		-- 按条件修改
		
		-- 按条件修改多个值
		-- update students set gender ="",name = "xxx" where ;
        update students set age = 19 where id = 3;
		
		
    -- 查询基本使用
        -- 查询所有列
        -- select * from 表名;
        select * from students;

        ---定条件查询    
        select * from students where id= 2;
        


        -- 查询指定列
        -- select 列1,列2,... from 表名;
        select name,age from students where id = 2;
        
        


        -- 可以使用as为列或表指定别名
        -- select 字段[as 别名] , 字段[as 别名] from 数据表;
        select name as '姓名' ,age from students where id = 2;


        -- 字段的顺序
        select name,age from students;
        select age,name from students;

    

    -- 删除
        -- 物理删除
        -- delete from 表名 where 条件
        delete from students where id = 3;
      

        -- 逻辑删除
        -- 用一个字段来表示 这条信息是否已经不能再使用了
        -- 给students表添加一个 is_delete 字段 bit 类型
		--alter table 表名 add 字段 类型 default 默认值;
        alter table students add is_delete bit;
        alter table students change is_delete is_delete bit default 0;

        
		
	-- 数据库备份与恢复(了解)
		-- mysqldump –uroot –p 数据库名 > python.sql;
        mysqldump -uroot -p python8 > python8.sql;
		-- mysql -uroot –p 新数据库名 < python.sql; # 注意导入的时候需要先要创建数据库
        mysql -uroot -p python8 < python8.sql;
数据库操作前的准备
-- 创建数据库
-- create database python_test_1 charset=utf8;

-- 使用数据库
-- use python_test_1;

-- students表
-- create table students(
--     id int unsigned primary key auto_increment not null,
--     name varchar(20) default '',
--     age tinyint unsigned default 0,
--     height decimal(5,2),
--     gender enum('男','女','中性','保密') default '保密',
--     cls_id int unsigned default 0,
--     is_delete bit default 0
-- );

-- classes表
-- create table classes (
--     id int unsigned auto_increment primary key not null,
--     name varchar(30) not null
-- );


-- 查询练习
	-- 查询所有字段
	-- select * from 表名;
	select * from students;


	-- 查询指定字段
	-- select 列1,列2,... from 表名;
	select name,age from students;

	
	-- 使用 as 给字段起别名
	-- select 字段 as 名字.... from 表名;
	select name as "姓名" ,age as a from students;

	

	-- select 表名.字段 .... from 表名;
	select students.name from students;
	
	
	-- 可以通过 as 给表起别名
	-- select 别名.字段 .... from 表名 as 别名;
	select s.name from students as s;
	
	
	

	-- 消除重复行(查性别)
	
	-- distinct 字段 
	select distinct gender from students;

	

-- 条件查询
	-- 比较运算符
		-- select .... from 表名 where .....
		-- >
		-- 查询年纪大于18岁的信息
		select * from students where age > 18;


		-- <
		-- 查询年纪小于18岁的信息
		select * from students where age < 18;
		
		

		-- >=
		-- <=
		-- 查询小于或者等于18岁的信息
		select * from students where age <= 18;

		-- =
		-- 查询年龄为18岁的所有学生的名字
		select * from students where age = 18;




		-- != 或者 <>
		-- 查询年龄不为18岁的所有学生的名字
		select * from students where age != 18;

		--select * from students where age <> 18;不要记 忘记
		
		

	-- 逻辑运算符
		-- and
		-- 年纪18和28之间的所以学生信息
		select * from students where age > 18 and age < 28;


		-- 18岁以上的女性
		-- or
		-- 18以上或者身高高过180(包含)以上的女性
		select * from students where (age > 18 or height > 180 ) and gender = "女";
		

		-- not
		-- 不在 18岁以上的女性 这个范围内的信息
		select * from students where not ( age > 18 and gender = "女");
		select * from students where not age > 18 and gender = "女" ;  #以后请在写sql语句时,请问清楚他的目的
		


	-- 模糊查询(where name like 要查询的数据)
		-- like 
		-- % 替换任意个
		-- _ 替换1个
		-- 查询姓名中 以 "小" 开始的名字
		select * from students where name like '小%';
		

		-- 查询姓名中 有 "小" 所有的名字
		select * from students where name like "%小%";
		

		-- 查询有2个字的名字
		select * from students where name like "__";



		-- 查询有3个字的名字
		select * from students where name like "___";

		#select * from students where name not like "___";查询不是三个字符的
		

		-- 查询至少有2个字的名字
		select * from students where name like "__%";
		


	-- 范围查询
		-- in (1, 3, 8)表示在一个非连续的范围内
		-- 查询 年龄为18或34的姓名
		-- select * from students where age = 18 or age = 34;
		select * from students where age in (18,34);
		

		-- not in 不非连续的范围之内
		-- 年龄不是 18或34岁的信息
		select * from students where age not in (18,34);

		
		-- between ... and ...表示在一个连续的范围内
		-- 查询 年龄在18到34之间的的信息

		select * from students where age between 18 and 34;
		

		
		-- not between ... and ...表示不在一个连续的范围内
		-- 查询 年龄不在18到34之间的的信息
		select * from students where age not between 18 and 34;
		

	-- 空判断
		-- 判空is null
		-- 查询身高为空的信息
		select * from students where height is null;
		


		-- 判非空is not null
		select * from students where height is not null;
		


-- 排序
	-- order by 字段
	-- asc
	-- asc从小到大排列，即升序
	-- desc
	-- desc从大到小排序，即降序
	-- 查询年龄在18到34岁之间的男性，按照年龄从小到大到排序
	select * from students where age between 18 and 34  and gender='男' order by age asc;
	


	-- 查询年龄在18到34岁之间的女性，身高从高到矮排序
	select * from students where age between 18 and 34 and gender ="女" order by height desc;
	

	-- order by 多个字段
	-- 查询年龄在18到34岁之间的女性，身高从高到矮排序, 如果身高相同的情况下按照年龄从小到大排序
	select * from students where age between 18 and 34 and gender = "女" order by height desc,age asc;
	
    -- 如果年龄也相同那么按照id从大到小排序
    select * from students where age between 18 and 34 and gender = "女" order by height desc,age asc,id desc;
